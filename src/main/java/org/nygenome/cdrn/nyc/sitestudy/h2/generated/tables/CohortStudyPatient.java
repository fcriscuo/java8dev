/**
 * This class is generated by jOOQ
 */
package org.nygenome.cdrn.nyc.sitestudy.h2.generated.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.nygenome.cdrn.nyc.sitestudy.h2.generated.CohortStudy;
import org.nygenome.cdrn.nyc.sitestudy.h2.generated.Keys;
import org.nygenome.cdrn.nyc.sitestudy.h2.generated.tables.records.CohortStudyPatientRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CohortStudyPatient extends TableImpl<CohortStudyPatientRecord> {

    private static final long serialVersionUID = -946873678;

    /**
     * The reference instance of <code>COHORT_STUDY.COHORT_STUDY_PATIENT</code>
     */
    public static final CohortStudyPatient COHORT_STUDY_PATIENT = new CohortStudyPatient();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CohortStudyPatientRecord> getRecordType() {
        return CohortStudyPatientRecord.class;
    }

    /**
     * The column <code>COHORT_STUDY.COHORT_STUDY_PATIENT.SS_ID</code>.
     */
    public final TableField<CohortStudyPatientRecord, String> SS_ID = createField("SS_ID", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false), this, "");

    /**
     * The column <code>COHORT_STUDY.COHORT_STUDY_PATIENT.PATIENT_ID</code>.
     */
    public final TableField<CohortStudyPatientRecord, String> PATIENT_ID = createField("PATIENT_ID", org.jooq.impl.SQLDataType.VARCHAR.length(40).nullable(false), this, "");

    /**
     * The column <code>COHORT_STUDY.COHORT_STUDY_PATIENT.COHORT_STUDY_ID</code>.
     */
    public final TableField<CohortStudyPatientRecord, Long> COHORT_STUDY_ID = createField("COHORT_STUDY_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>COHORT_STUDY.COHORT_STUDY_PATIENT</code> table reference
     */
    public CohortStudyPatient() {
        this("COHORT_STUDY_PATIENT", null);
    }

    /**
     * Create an aliased <code>COHORT_STUDY.COHORT_STUDY_PATIENT</code> table reference
     */
    public CohortStudyPatient(String alias) {
        this(alias, COHORT_STUDY_PATIENT);
    }

    private CohortStudyPatient(String alias, Table<CohortStudyPatientRecord> aliased) {
        this(alias, aliased, null);
    }

    private CohortStudyPatient(String alias, Table<CohortStudyPatientRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return CohortStudy.COHORT_STUDY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CohortStudyPatientRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CohortStudyPatientRecord>> getKeys() {
        return Arrays.<UniqueKey<CohortStudyPatientRecord>>asList(Keys.CONSTRAINT_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CohortStudyPatientRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CohortStudyPatientRecord, ?>>asList(Keys.CONSTRAINT_14);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CohortStudyPatient as(String alias) {
        return new CohortStudyPatient(alias, this);
    }

    /**
     * Rename this table
     */
    public CohortStudyPatient rename(String name) {
        return new CohortStudyPatient(name, null);
    }
}
