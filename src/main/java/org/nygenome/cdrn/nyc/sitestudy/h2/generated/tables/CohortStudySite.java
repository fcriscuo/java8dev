/**
 * This class is generated by jOOQ
 */
package org.nygenome.cdrn.nyc.sitestudy.h2.generated.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.nygenome.cdrn.nyc.sitestudy.h2.generated.CohortStudy;
import org.nygenome.cdrn.nyc.sitestudy.h2.generated.Keys;
import org.nygenome.cdrn.nyc.sitestudy.h2.generated.tables.records.CohortStudySiteRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CohortStudySite extends TableImpl<CohortStudySiteRecord> {

    private static final long serialVersionUID = 947751318;

    /**
     * The reference instance of <code>COHORT_STUDY.COHORT_STUDY_SITE</code>
     */
    public static final CohortStudySite COHORT_STUDY_SITE = new CohortStudySite();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CohortStudySiteRecord> getRecordType() {
        return CohortStudySiteRecord.class;
    }

    /**
     * The column <code>COHORT_STUDY.COHORT_STUDY_SITE.COHORT_STUDY_SITE_ID</code>.
     */
    public final TableField<CohortStudySiteRecord, Long> COHORT_STUDY_SITE_ID = createField("COHORT_STUDY_SITE_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("(NEXT VALUE FOR COHORT_STUDY.SYSTEM_SEQUENCE_C2178153_B327_4F26_8356_5F481C0D6678)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>COHORT_STUDY.COHORT_STUDY_SITE.COHORT_STUDY_ID</code>.
     */
    public final TableField<CohortStudySiteRecord, Long> COHORT_STUDY_ID = createField("COHORT_STUDY_ID", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>COHORT_STUDY.COHORT_STUDY_SITE.SITE_CODE</code>.
     */
    public final TableField<CohortStudySiteRecord, String> SITE_CODE = createField("SITE_CODE", org.jooq.impl.SQLDataType.VARCHAR.length(12).nullable(false), this, "");

    /**
     * Create a <code>COHORT_STUDY.COHORT_STUDY_SITE</code> table reference
     */
    public CohortStudySite() {
        this("COHORT_STUDY_SITE", null);
    }

    /**
     * Create an aliased <code>COHORT_STUDY.COHORT_STUDY_SITE</code> table reference
     */
    public CohortStudySite(String alias) {
        this(alias, COHORT_STUDY_SITE);
    }

    private CohortStudySite(String alias, Table<CohortStudySiteRecord> aliased) {
        this(alias, aliased, null);
    }

    private CohortStudySite(String alias, Table<CohortStudySiteRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return CohortStudy.COHORT_STUDY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CohortStudySiteRecord, Long> getIdentity() {
        return Keys.IDENTITY_COHORT_STUDY_SITE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CohortStudySiteRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_E;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CohortStudySiteRecord>> getKeys() {
        return Arrays.<UniqueKey<CohortStudySiteRecord>>asList(Keys.CONSTRAINT_E);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CohortStudySiteRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CohortStudySiteRecord, ?>>asList(Keys.CONSTRAINT_E1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CohortStudySite as(String alias) {
        return new CohortStudySite(alias, this);
    }

    /**
     * Rename this table
     */
    public CohortStudySite rename(String name) {
        return new CohortStudySite(name, null);
    }
}
